//
//  SkillTableViewCell02.m
//  Miner
//
//  Created by zhihua.qian on 15/1/9.
//  Copyright (c) 2015年 jim kaden. All rights reserved.
//

#import "SkillTableViewCell02.h"
#import "Skill.h"
#import "GameUtility.h"
#import "StringConfig.h"
#import "GameObject.h"

@interface SkillTableViewCell02 ()

@property (nonatomic, weak) SkillViewController* skillVC;
@property (nonatomic, weak) PetViewController* petVC;

@end

@implementation SkillTableViewCell02

- (void)awakeFromNib {
    // Initialization code
}

- (void)setSelected:(BOOL)selected animated:(BOOL)animated {
    [super setSelected:selected animated:animated];

    // Configure the view for the selected state
}

-(void)setDataInfoForAllControllers:(NSNumber*)skillId withLv:(NSNumber*)lv superViewController:(BaseViewController*)vc
{
    if ([vc isKindOfClass:[SkillViewController class]])
    {
        self.skillVC = (SkillViewController*)vc;
    }
    else
    {
        self.petVC = (PetViewController*)vc;
    }
    self.skillId = skillId;
    
    SkillBase* skillBase = [[SkillConfig share] getSkillBaseWithTId:[self skillId] withLevel:lv];
    UIImage* skillIcon = [GameUtility imageNamed:[skillBase skillIcon]];
    [[self selSkillIconImage] setImage:skillIcon];
    
    [[self selUpgrageSkillBtn] setSelected:YES];
    
    NSString* skillName = [[StringConfig share] getLocalLanguage:[skillBase skillName]];
    [[self selSkillNameLabel] setText:skillName];
    
    NSString* skillValue = [[NSNumber numberWithInteger:[skillBase skillCastVal]] stringValue];
    [[self selSkillValueLabel] setText:skillValue];
    
    NSString* skillDesc = [[StringConfig share] getLocalLanguage:[skillBase skillDesc]];
    [[self selSkillDescLabel] setText:skillDesc];
    [[self selSkillNextDescLabel] setText:skillDesc];
    
    if (self.petVC != nil)
    {
        [[self selSkillUnloadBtn] setHidden:YES];
        [[self selSkillLoadBtn] setHidden:YES];
    }
    else
    {
        [self resetAssembleBtn:skillBase];
    }
}
-(void)resetAssembleBtn:(SkillBase*)base
{
    if ([self sectionInTableView] == 0)
    {
        [[self selSkillUnloadBtn] setHidden:NO];
        [[self selSkillLoadBtn] setHidden:YES];
    }
    else
    {
        [[self selSkillUnloadBtn] setHidden:YES];
        [[self selSkillLoadBtn] setHidden:NO];
        NSNumber* heroLv = [[[GameObject sharedInstance] player] heroLevel];
        NSInteger needLv = [base needHeroLV];
        if ([heroLv integerValue] > needLv)
        {
            [[self selSkillLoadBtn] setEnabled:YES];
        }
        else
        {
            [[self selSkillLoadBtn] setEnabled:NO];
        }
    }
}

- (IBAction)onUnloadClicked:(id)sender
{
    NSLog(@"卸载技能，╮(╯▽╰)╭！");
    [[self skillVC] unloadSkillWithId:[self skillId]];
    
}
- (IBAction)onLoadClicked:(id)sender
{
    NSLog(@"装备技能，\(^o^)/！");
    [[self skillVC] loadSkillWithId:[self skillId]];
}
- (IBAction)onCellClicked:(id)sender
{
    if ([self skillVC])
    {
        [[self skillVC] didSelectRowInSection:[self sectionInTableView] atRow:[self rowInTableView]];
    }
    else
    {
        [[self petVC] didSelectRowInSection:[self sectionInTableView] atRow:[self rowInTableView]];
    }
}
- (IBAction)onSelUpgradeClicked:(id)sender
{
}
@end

//
//  Equip.m
//  testMiner
//
//  Created by zhihua.qian on 14-12-3.
//  Copyright (c) 2014å¹´ tonyguan. All rights reserved.
//

#import "Equipment.h"
#import "ConstantsConfig.h"
#import "AttriConfig.h"

@implementation Attribute

@end

@implementation Equipment

-(void)setEquipDataWithDictionary:(NSDictionary *)data
{
    self.equipId    = [data objectForKey:@"EID"];
    
    NSNumber* identifier = [data objectForKey:@"TID"];
    self.equipmentDef = [[EquipmentConfig share] getEquipmentDefWithKey:identifier];
    self.equipTId = [NSNumber numberWithInteger:self.equipmentDef.equipId];
    self.equipName = self.equipmentDef.equipName;
    self.equipIcon = self.equipmentDef.equipIcon;
    self.equipDesc = self.equipmentDef.equipDesc;
    
    self.equipSlot  = [data objectForKey:@"Slot"];
    self.equipStar  = [data objectForKey:@"Star"];
    self.equipType  = [data objectForKey:@"IType"];
    self.equipBV    = [data objectForKey:@"BV"];
    
    if ([data objectForKey:@"PA"])
    {
        NSArray *primaryAttri = [data objectForKey:@"PA"];
        [self setEquipPrimaryAttriWithArray:primaryAttri];
    }
    
    if ([data objectForKey:@"SA"])
    {
        NSArray *subAttri = [data objectForKey:@"SA"];
        [self setEquipSubAttriWithArray:subAttri];
    }
    
    if ([data objectForKey:@"SPA"])
    {
        NSArray* supAttri = [data objectForKey:@"SPA"];
        [self setEquipSupAttriWithArray:supAttri];
    }
    
    self.equipSellPrice = [[ConstantsConfig share] getEquipSellPriceWithStar:self.equipStar];
}

-(void)setEquipPrimaryAttriWithArray:(NSArray *)data
{
    if ( [data count] == 0 )
        return;
    
    self.mainAttri = [[Attribute alloc]init];
    self.mainAttri.attriId = [data objectAtIndex:0];
    self.mainAttri.attriName = [[AttriConfig share] getAttriNameWithId:self.mainAttri.attriId];
    self.mainAttri.attriDesc = [[AttriConfig share] getAttriDescWithId:self.mainAttri.attriId];
    self.mainAttri.attriIcon = [[AttriConfig share] getAttriIconWithId:self.mainAttri.attriId];
    self.mainAttri.attriLv = [data objectAtIndex:1];
    self.mainAttri.attriValue = [data objectAtIndex:2];
    self.mainAttri.attriCurExp = [data objectAtIndex:3];
    
    self.mainAttri.attriMaxExp = [[MainAttriLvConfig share] getLevelMaxExpWithLv:self.mainAttri.attriLv starNum:self.equipStar];
    self.mainAttri.attriBaseExp = [NSNumber numberWithInteger:self.equipmentDef.basicExp];
    self.mainAttri.attriTotalExp = [[MainAttriLvConfig share] getTotalExpWithLV:self.mainAttri.attriLv starNum:self.equipStar];
    self.mainAttri.moneyType = [[MainAttriLvConfig share] getMoneyTypeWithLv:self.mainAttri.attriLv starNum:self.equipStar];
    self.mainAttri.moneyRatio = [[MainAttriLvConfig share] getMoneyRatioWithLv:self.mainAttri.attriLv starNum:self.equipStar];
    
    self.mainAttri.ratio = [[[ConstantsConfig share] getMainAttriLvUpRatio] floatValue]/10000.0;
    
    float baseExp = [self.mainAttri.attriBaseExp floatValue];
    float totalExp = [self.mainAttri.attriTotalExp floatValue];
    float ratio = self.mainAttri.ratio;
    float moneyRatio = [self.mainAttri.moneyRatio floatValue];
    self.mainAttri.cost = (baseExp + (totalExp+ [self.mainAttri.attriCurExp floatValue]) * ratio) * moneyRatio;
    
}

-(void)setEquipSubAttriWithArray:(NSArray *)data
{
    if ([data count] == 0 || [data count]%3 != 0)
        return;
    
    NSMutableArray *tempArr = [[NSMutableArray alloc]init];
    int i = 0;
    while (i< [data count])
    {
        Attribute *attri = [[Attribute alloc]init];
        attri.attriId   = [data objectAtIndex:i++];
        attri.attriName = [[AttriConfig share] getAttriNameWithId:attri.attriId];
        attri.attriDesc = [[AttriConfig share] getAttriDescWithId:attri.attriId];
        attri.attriIcon = [[AttriConfig share] getAttriIconWithId:attri.attriId];
        attri.attriValue = [data objectAtIndex:i++];
        attri.attriLv   = [data objectAtIndex:i++];
        attri.attriUpItems = [[SubAttriLvConfig share] getUpgradeItemsWithLevel:attri.attriLv subAttriUpID:self.equipmentDef.subAttriUpID];
        
        [tempArr addObject:attri];
    }
    
    self.subAttri = [[NSArray alloc]initWithArray:tempArr];
}

-(void)setEquipSupAttriWithArray:(NSArray*)data
{
    if ([data count] == 0)
        return;
    
    self.godAttri = [[Attribute alloc]init];
    self.godAttri.attriId = [data objectAtIndex:0];
    self.godAttri.attriName = [[AttriConfig share] getAttriNameWithId:self.godAttri.attriId];
    self.godAttri.attriDesc = [[AttriConfig share] getAttriDescWithId:self.godAttri.attriId];
    self.godAttri.attriIcon = [[AttriConfig share] getAttriIconWithId:self.godAttri.attriId];
    self.godAttri.attriLv = [data objectAtIndex:1];
    self.godAttri.attriValue = [data objectAtIndex:2];
    self.godAttri.attriCurExp = [data objectAtIndex:3];
    self.godAttri.attriMaxExp = [[MainAttriLvConfig share] getLevelMaxExpWithLv:self.godAttri.attriLv starNum:self.equipStar];
}

-(int)getMainAttriType
{
    return [[[self mainAttri] attriId] intValue];
}

#pragma mark - This function is public.For EquipInfoView Use
-(NSString *)mainAttriInfoString
{
    return [NSString stringWithFormat:@" +%@\n", self.mainAttri.attriValue];
}
-(NSString *)subAttriInfoString
{
    NSMutableString *tempString = [[NSMutableString alloc]init];
    for (Attribute *attri in self.subAttri)
    {
        NSString *stringDesc = [NSString stringWithFormat:@" +%@\n", attri.attriValue];
        [tempString appendString:stringDesc];
    }
    return tempString;
}
@end

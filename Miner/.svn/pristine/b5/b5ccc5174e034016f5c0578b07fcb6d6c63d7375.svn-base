//
//  EquipInfoViewController.m
//  Miner
//
//  Created by zhihua.qian on 14-12-1.
//  Copyright (c) 2014年 jim kaden. All rights reserved.
//

#import "EquipInfoViewController.h"
#import "Equipment.h"

#import "GameUI.h"
#import "GameObject.h"
#import "PackageManager.h"
#import "StringConfig.h"
#import "GameUtility.h"

#import "UtilityDef.h"

@interface EquipInfoViewController ()

@property (nonatomic, weak) Equipment *equipForShow;
@property (nonatomic, strong) NSNumber *petId;

@end

@implementation EquipInfoViewController
- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    self.petId = DefaultValue;
    [[self attributeIcon0] setAttriID:1];
    [[self attributeIcon1] setAttriID:1];
    [[self attributeIcon2] setAttriID:1];
    [[self attributeIcon3] setAttriID:1];
    [[self attributeIcon4] setAttriID:1];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

//
// 该方法被用于外部调用 主要是 GameUI 的调用
// 用来 设置界面控件的显示及其内容
//
-(void)setEquipInfoViewData:(NSDictionary *)data
{
    if ([data objectForKey:@"EquipId"])
    {
        NSNumber *equipId = [data objectForKey:@"EquipId"];
        self.equipForShow = [[GameObject sharedInstance] getEquipWithIdentifier:equipId];
        
        if (self.equipForShow == nil)
        {
            [[GameUI sharedInstance] showError:@"装备未找到！" title:@"Error"];
            return;
        }
    }
    
    if ([data objectForKey:@"PetId"])
    {
        self.petId = [data objectForKey:@"PetId"];
    }
    
    [self updateEquipInfoView];
}

// 如果 0 < equipSlot < 9 说明是从装备界面过来的
// 否则 就是从背包界面过来的
-(void)updateEquipInfoView
{
    if ([self.equipForShow.equipSlot integerValue] > 0 && [self.equipForShow.equipSlot integerValue] < 9)
    {
        self.removeBtn.hidden = NO;
        self.repalceBtn.hidden = NO;
        self.sellEquipBtn.hidden = YES;
    }
    else
    {
        self.removeBtn.hidden = YES;
        self.repalceBtn.hidden = YES;
        self.sellEquipBtn.hidden = NO;
    }
    
    self.equipNameLabel.text    = [[StringConfig share] getLocalLanguage:self.equipForShow.equipName];
    self.scoreLabel.text        = [self.equipForShow.equipBV stringValue];
    self.mainAttriLabel.text    = [self.equipForShow mainAttriInfoString];
    self.equipDescLabel.text    = [[StringConfig share] getLocalLanguage:self.equipForShow.equipDesc];
    self.equipLevel.text        = [self.equipForShow.mainAttri.attriLv stringValue];
    self.equipLevel.textColor   = [GameUtility getColorWithStar:[self.equipForShow.equipStar intValue]];
    self.textLvLabel.textColor  = [GameUtility getColorWithStar:[self.equipForShow.equipStar intValue]];
    self.equipIcon.image        = [GameUtility imageNamed:self.equipForShow.equipIcon];
    self.equipStarIcon.image    = [GameUtility imageNamed:[GameUtility getImageNameForEquipStrengthenWithStar:[self.equipForShow.equipStar intValue]]];
    self.mainAttriIcon.image    = [GameUtility imageNamed:[self.equipForShow.mainAttri attriIcon]];
    self.sellPriceLabel.text    = [self.equipForShow.equipSellPrice stringValue];
    [[self attributeIcon0] setAttriID:[self.equipForShow.mainAttri.attriId intValue]];
    
    // 副属性
    NSArray* imageViewOfSubs = @[ self.sub1AttriIcon,self.sub2AttriIcon, self.sub3AttriIcon ];
    NSArray* labelOfSubs = @[self.sub1AttriLabel, self.sub2AttriLabel, self.sub3AttriLabel];
    NSArray* attributeSubs = @[self.attributeIcon1, self.attributeIcon2, self.attributeIcon3];
    
    int i = 0;
    for( Attribute* subAttri in self.equipForShow.subAttri)
    {
        ((UIImageView*)imageViewOfSubs[i]).image = [GameUtility imageNamed:[subAttri attriIcon]];
        ((UILabel*)labelOfSubs[i]).text = [subAttri.attriValue stringValue];
        [((UIAttributeIcon*)attributeSubs[i]) setAttriID:[subAttri.attriId intValue]];
        
        ((UIView*)imageViewOfSubs[i]).hidden = NO;
        ((UILabel*)labelOfSubs[i]).hidden = NO;
        ((UIAttributeIcon*)attributeSubs[i]).hidden = NO;
        i++;
    }
    
    if (i == 0)
    {
        self.builBtn.hidden = YES;
    }
    
    for(; i < imageViewOfSubs.count; i ++)
    {
        ((UIView*)imageViewOfSubs[i]).hidden = YES;
        ((UILabel*)labelOfSubs[i]).hidden = YES;
        ((UIAttributeIcon*)attributeSubs[i]).hidden = YES;
    }
    
    // 神器属性
    if( self.equipForShow.godAttri != nil )
    {
        self.godAttriIcon.image = [GameUtility imageNamed:self.equipForShow.godAttri.attriIcon];
        self.godAttriLabel.text = [self.equipForShow.godAttri.attriValue stringValue];
        self.godAttriIcon.hidden = NO;
        self.godAttriLabel.hidden = NO;
        self.evolutionBtn.hidden = NO;
        self.attributeIcon4.hidden = NO;
        [[self attributeIcon4] setAttriID:[self.equipForShow.godAttri.attriId intValue]];
    }
    else
    {
        self.godAttriIcon.hidden = YES;
        self.godAttriLabel.hidden = YES;
        self.evolutionBtn.hidden = YES;
        self.attributeIcon4.hidden = YES;
    }
}

#pragma mark - button events
- (IBAction)onCloseClicked:(id)sender
{
    if ([[self petId] isEqualToNumber:DefaultValue])
    {
        if ([[[self equipForShow] equipSlot] isEqualToNumber:DefaultValue])
        {
            [[GameUI sharedInstance] showPackView];
        }
        else
        {            
            [[GameUI sharedInstance] showEquipView];
        }
    }
    else
    {
        [[GameUI sharedInstance] showPetView];
    }
}

- (IBAction)onLockClicked:(id)sender
{
}

- (IBAction)upgradeMainAttri:(id)sender
{
    NSMutableDictionary* tempDict = [[NSMutableDictionary alloc] init];
    [tempDict setObject:[[self equipForShow] equipId] forKey:@"EquipId"];
    [tempDict setObject:[self petId] forKey:@"PetId"];
    [[GameUI sharedInstance] showEquipMainView:tempDict];
}
- (IBAction)upgradeSubAttri:(id)sender
{
    NSMutableDictionary* tempDict = [[NSMutableDictionary alloc] init];
    [tempDict setObject:[[self equipForShow] equipId] forKey:@"EquipId"];
    [tempDict setObject:[self petId] forKey:@"PetId"];
    [[GameUI sharedInstance] showEquipSubView:tempDict];
}

- (IBAction)upgradeGodAttri:(id)sender
{
}

- (IBAction)onUnloadEquipClicked:(id)sender
{
    BOOL isFull = [[[GameObject sharedInstance] bag] isEquipFull];
    if (isFull)
    {
        [[GameUI sharedInstance] showError:@"背包已经满了，请先清理背包吧！！！" title:@"Error"];
        return;
    }
    
    NSMutableDictionary *tempDict = [[NSMutableDictionary alloc]init];
    
    [tempDict setObject:self.equipForShow.equipId forKey:@"EID"];
    [tempDict setObject:self.equipForShow.equipSlot forKey:@"Slot"];
    if ([[self petId] isEqualToNumber:DefaultValue] )
    {
        [tempDict setObject:[self petId] forKey:@"Pet"];
    }
    else
    {
        [tempDict setObject:DefaultValue forKey:@"Pet"];
    }
    
    [[PackageManager sharedInstance] unloadEquipRequest:tempDict];
    
    [[GameObject sharedInstance] setWillChangedEquipWithId:self.equipForShow.equipId withPetId:[self petId]];
}
- (IBAction)onChangeEquipClicked:(id)sender
{
    NSMutableDictionary* tempDict = [[NSMutableDictionary alloc] init];
    [tempDict setObject:[[self equipForShow] equipSlot] forKey:@"EquipSlot"];
    [tempDict setObject:[self petId] forKey:@"PetId"];
    [[GameUI sharedInstance] showEquipChangeView:tempDict];
}

//
// 出售action
//
- (IBAction)onSellClicked:(id)sender
{
    if ([self.equipForShow.equipSlot integerValue] > 0)
    {
        // 一般不会走这里
        [[GameUI sharedInstance] showError:@"装备在身上无法出售，请先卸载！" title:@"Error"];
        return;
    }
    
    NSMutableDictionary *tempDict = [[NSMutableDictionary alloc]init];
    [tempDict setObject:self.equipForShow.equipId forKey:@"ID"];
    NSNumber* equipId = [[NSNumber alloc]initWithInteger:self.equipForShow.equipmentDef.equipId];
    [tempDict setObject:equipId forKey:@"TID"];
    [tempDict setObject:INT_TO_NUMBER(1) forKey:@"Num"];
    
    [[PackageManager sharedInstance] sellItemOrEquipFromBagRequest:tempDict];
}
@end

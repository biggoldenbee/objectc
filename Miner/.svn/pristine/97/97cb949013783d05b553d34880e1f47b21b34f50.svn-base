//
//  QQEquipBtnSelected.m
//  Miner
//
//  Created by zhihua.qian on 14-12-23.
//  Copyright (c) 2014年 jim kaden. All rights reserved.
//

#import "QQEquipBtnSelected.h"
#import "Equipment.h"
#import "Item.h"
#import "GameUtility.h"
#import "GameUI.h"
#import "GameObject.h"

@interface QQEquipBtnSelected ()

@property (nonatomic, strong) NSNumber* equipId;
@property (nonatomic, strong) NSNumber* itemId;

@end

@implementation QQEquipBtnSelected

/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect {
    // Drawing code
}
*/

-(void)setStateType:(int)type;
{
    self.btnType = [[NSNumber alloc] initWithInt:type];
}

-(void)setEquipDataWithIdentifier:(NSNumber*)equipId
{
//    [self setHidden:NO];
    [self setStateIconHidden:YES];
    self.isOKForUpgrade = NO;
    self.equipId = equipId;
    Equipment* equip = [[GameObject sharedInstance] getEquipWithIdentifier:equipId];
    
    self.textLvLabel.textColor = [GameUtility getColorWithStar:[equip.equipStar intValue]];
    self.levelLabel.textColor = [GameUtility getColorWithStar:[equip.equipStar intValue]];
    self.levelLabel.text = [equip.mainAttri.attriLv stringValue];
    
    NSString* backImageName = [GameUtility getImageNameForEquipStrengthenWithStar:[equip.equipStar intValue]];
    UIImage* background = [GameUtility imageNamed:backImageName];
    if (background)
    {
        [self.selectedIcon setBackgroundImage:background forState:UIControlStateNormal];
    }
    else
    {
        NSLog(@"为找到背景图片。背景图 %@", backImageName);
    }
    
    UIImage* equipIcon = [GameUtility imageNamed:equip.equipmentDef.equipIcon];
    if (equipIcon)
    {
        [self.selectedIcon setImage:equipIcon forState:UIControlStateNormal];
    }
    else
    {
        NSLog(@"为找到装备图标 %lu", equip.equipmentDef.equipId);
    }
}

-(void)setItemDataWithTId:(NSNumber*)itemTId countNum:(NSInteger)num
{
    [self setStateIconHidden:YES];
    
    self.itemId = itemTId;
    NSInteger needNum = num;
    NSInteger curNum = 0;
    Item* item = [[[GameObject sharedInstance] bag] getItemWithTId:itemTId];
    if (item != nil)
    {
        curNum = [[item itemCount] integerValue];
    }
    if (needNum <= curNum)
    {
        self.isOKForUpgrade = YES;
    }
    
    ItemDef* itemDef = [[ItemConfig share] getItemDefWithKey:itemTId];
    
    // 这里  level是最大需要数量
    self.levelLabel.text = [[NSNumber numberWithInteger:num] stringValue];
    // 这里  text level是现在背包里有的数量
    self.textLvLabel.text = [[[NSNumber numberWithInteger:curNum] stringValue] stringByAppendingString:@" /"];
  
    UIImage* itemIcon = [GameUtility imageNamed:[itemDef itemIcon]];
    if (itemIcon)
    {
        [self.selectedIcon setImage:itemIcon forState:UIControlStateNormal];
    }
    else
    {
        NSLog(@"为找到装备图标 %@", item.itemIId);
    }
}

-(void)setStateIconHidden:(BOOL)isHidden
{
    [self.stateIcon setHidden:isHidden];
}

- (IBAction)onShowEquipInfoClicked:(id)sender
{
    if ([self.btnType integerValue] >= 10)
    {
        return;
    }
    
    NSMutableDictionary* tempDict = [[NSMutableDictionary alloc]init];
    [tempDict setObject:self.equipId forKey:@"EquipId"];
    [tempDict setObject:self.petId forKey:@"PetId"];
    
    [[GameUI sharedInstance] showEquipInfoView:tempDict];
}
@end
